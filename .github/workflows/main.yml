name: Jager CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Setups:
    name: Setups
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Ensure go.sum Exists and Cache Go Modules
        run: |
          for dir in dataservice db loadbalancer logservice web; do
            if [ -f "$dir/go.mod" ]; then
              echo "Ensuring go.sum exists for $dir..."
              (cd "$dir" && go mod tidy)

              echo "Caching Go modules for $dir..."
              echo "::group::Cache Go modules for $dir"
              GOCACHE_DIR="$HOME/.cache/go-build-$dir"
              GOPATH_MOD_DIR="$HOME/go/pkg/mod-$dir"
              echo "GOCACHE_DIR=$GOCACHE_DIR"
              echo "GOPATH_MOD_DIR=$GOPATH_MOD_DIR"

              # Cache the dependencies
              echo "::save-state name=go-mod-cache-$dir::$GOCACHE_DIR"
              echo "::save-state name=go-pkg-cache-$dir::$GOPATH_MOD_DIR"
            else
              echo "Skipping $dir (no go.mod found)"
            fi
          done

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run Linter for Each Microservice
        run: |
          for dir in dataservice db loadbalancer logservice web; do
            if [ -f "$dir/go.mod" ]; then
              echo "Running golangci-lint for $dir..."
              (cd "$dir" && golangci-lint run --out-format=colored-line-number) || exit 1
            else
              echo "Skipping $dir (no go.mod found)"
            fi
          done
