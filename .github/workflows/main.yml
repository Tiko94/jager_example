name: Jager CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Setups:
    name: Setups
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Verify Go Installation
        run: go version

  DataserviceLint:
    name: DataserviceLint
    runs-on: ubuntu-latest
    needs: Setups
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Force Go to Use Vendor
        run: go env -w GOFLAGS="-mod=vendor"

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run golangci-lint for dataservice
        run: |
          cd dataservice
          golangci-lint run --modules-download-mode=vendor --timeout=5m --out-format=colored-line-number

  LogserviceLint:
    name: LogserviceLint
    runs-on: ubuntu-latest
    needs: Setups
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Force Go to Use Vendor
        run: go env -w GOFLAGS="-mod=vendor"

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run golangci-lint for logservice
        run: |
          cd logservice
          golangci-lint run --modules-download-mode=vendor --timeout=5m --out-format=colored-line-number

  Sonar:
    name: Sonarscan
    runs-on: ubuntu-latest
    needs: [DataserviceLint, LogserviceLint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=dataservice,logservice,web,loadbalancer \
            -Dsonar.go.coverage.reportPaths=coverage.out
  tests:
    name: Run Dataservice Tests
    runs-on: ubuntu-latest
    needs: DataserviceLint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run Unit Tests with Coverage (Dataservice)
        run: |
          cd dataservice
          go test -v ./... -coverprofile=coverage.out

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: dataservice-coverage
          path: dataservice/coverage.out